- name: Validate variables
  assert:
    that: (ya_requestor_promtail_install if ya_requestor_promtail_run_service else True)

- name: Create releases directory
  file:
    path: "{{ ya_requestor_releases_dir }}"
    state: directory

- name: Unpack yagna
  unarchive:
    src: "{{ ya_requestor_yagna_url }}"
    dest: "{{ ya_requestor_releases_dir }}/"
    remote_src: "{{ ya_requestor_yagna_url is search('://') | ternary('yes','no') }}"
    creates: "{{ ya_requestor_yagna_dir }}"

- name: Unpack promtail
  when: ya_requestor_promtail_install
  block:

    - name: Create promtail directory
      file:
        path: "{{ ya_requestor_promtail_dir }}"
        state: directory

    - name: Download promtail
      unarchive:
        src: "{{ ya_requestor_promtail_url }}"
        dest: "{{ ya_requestor_promtail_dir }}/"
        remote_src: "{{ ya_requestor_promtail_url is search('://') | ternary('yes','no') }}"
        creates: "{{ ya_requestor_promtail_bin }}"

    - name: Symlink promtail
      file:
        state: link
        src: "promtail-linux-amd64"
        dest: "{{ ya_requestor_promtail_dir }}/promtail"
      notify: Restart promtail

- name: Create requestor dir
  file:
    path: "{{ ya_requestor_dir }}"
    state: directory

- name: Install .env
  template:
    src: .env.j2
    dest: "{{ ya_requestor_dir }}/.env"
  notify: Restart requestor

- name: Install helper scripts
  copy:
    src: "{{ item }}"
    dest: "{{ ya_requestor_dir }}/{{ item }}"
    mode: "755"
  loop:
    - "run_yagna.sh"
    - "fix_payment_initialization.sh"
  notify: Restart requestor

- name: Configure promtail
  when: ya_requestor_promtail_run_service
  template:
    src: promtail_config.yaml.j2
    dest: "{{ ya_requestor_dir }}/promtail_config.yaml"
  notify: Restart promtail

- name: Create systemd unit directory
  file:
    # TODO: support XDG_CONFIG_HOME if someone actually uses it
    path: "{{ ansible_user_dir }}/.config/systemd/user"
    state: directory

- name: Install promtail service
  template:
    src: promtail.service.j2
    dest: "{{ ansible_user_dir }}/.config/systemd/user/{{ ya_requestor_yagna_unit_name }}-promtail.service"
  notify: Restart promtail

- name: Install service
  template:
    src: yagna.service.j2
    dest: "{{ ansible_user_dir }}/.config/systemd/user/{{ ya_requestor_yagna_unit_name }}.service"
  notify: Restart requestor

- name: Enable loginctl linger
  command:
    cmd: "loginctl enable-linger"
    creates: "/var/lib/systemd/linger/{{ ansible_user_id }}"

- name: Start promtail
  when: ya_requestor_promtail_run_service
  systemd:
    scope: user
    daemon_reload: yes
    name: "{{ ya_requestor_yagna_unit_name }}-promtail"
    enabled: yes
    state: started
  register: ya_requestor_promtail_start

- name: Start ya-requestor yagna
  when: ya_requestor_run_yagna_service
  systemd:
    scope: user
    daemon_reload: yes
    name: "{{ ya_requestor_yagna_unit_name }}"
    enabled: yes
    state: started
  register: ya_requestor_start

- name: Apply the payment initialization workaround script
  shell:
    chdir: "{{ ya_requestor_dir }}"
    cmd: "./fix_payment_initialization.sh"

- name: Install simple watchdog
  when: ya_requestor_simple_watchdog_enabled
  block:
    - name: Compile simple watchdog (using docker)
      when: not local_build_use_podman
      delegate_to: localhost
      run_once: yes
      become: no
      shell:
        cmd: docker run --pull=always --rm --user="$(id -u):$(id -g)" -v "$PWD":/usr/src/myapp -w /usr/src/myapp rust:bullseye cargo build --release
        chdir: roles/ya-requestor/files/simple_watchdog/
        # don't use 'creates:' here, to always get it built using latest updates

    - name: Compile simple watchdog (using podman)
      when: local_build_use_podman
      delegate_to: localhost
      run_once: yes
      become: no
      shell:
        cmd: podman run --pull=always --rm --userns=keep-id --user="$(id -u):$(id -g)" -v "$PWD":/usr/src/myapp -w /usr/src/myapp docker.io/library/rust:bullseye cargo build --release
        chdir: roles/ya-requestor/files/simple_watchdog/
        # don't use 'creates:' here, to always get it built using latest updates

    - name: Install simple watchdog binary
      copy:
        src: roles/ya-requestor/files/simple_watchdog/target/release/simple_watchdog
        dest: "{{ ya_requestor_dir }}/simple_watchdog"
        mode: '0755'

    - name: Install simple watchdog service
      template:
        src: "simple_watchdog.{{ item }}.j2"
        dest: "{{ ansible_user_dir }}/.config/systemd/user/{{ ya_requestor_unit_base_name }}_simple_watchdog.{{ item }}"
      loop:
        - service
        - timer

    - name: Start simple watchdog service
      systemd:
        scope: user
        daemon_reload: yes
        name: "{{ ya_requestor_unit_base_name }}_simple_watchdog.timer"
        enabled: yes
        state: started

- name: Stop simple watchdog service
  when: not ya_requestor_simple_watchdog_enabled
  systemd:
    scope: user
    daemon_reload: yes
    name: "{{ ya_requestor_unit_base_name }}_simple_watchdog.timer"
    enabled: no
    state: stopped
  ignore_errors: yes  # go on if unit doesn't exist
